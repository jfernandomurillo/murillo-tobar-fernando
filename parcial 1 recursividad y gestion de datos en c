jose fernando murrilo tobar 
#include <stdio.h>

// Definir la estructura Estudiante
typedef struct {
    int codigo;
    float nota;
} Estudiante;

// Lista predefinida de estudiantes
Estudiante estudiantes[] = {
    {2024101, 4.5},
    {2024102, 3.2},
    {2024103, 2.9},
    {2024104, 5.0},
    {2024105, 3.8}
};
int total = 5;

// Función recursiva para buscar la nota máxima
float notaMaxima(Estudiante arr[], int n) {
    if (n == 1)
        return arr[0].nota;
    float max = notaMaxima(arr, n - 1);
    return (arr[n - 1].nota > max) ? arr[n - 1].nota : max;
}

// Función recursiva para calcular el promedio
float sumaNotas(Estudiante arr[], int n) {
    if (n == 0)
        return 0;
    return arr[n - 1].nota + sumaNotas(arr, n - 1);
}

// Función recursiva para selection sort por código
void selectionSortRec(Estudiante arr[], int n, int i) {
    if (i == n - 1)
        return;
    int min_idx = i;
    for (int j = i + 1; j < n; j++) {
        if (arr[j].codigo < arr[min_idx].codigo)
            min_idx = j;
    }
    // Intercambiar si es necesario
    if (min_idx != i) {
        Estudiante temp = arr[i];
        arr[i] = arr[min_idx];
        arr[min_idx] = temp;
    }
    selectionSortRec(arr, n, i + 1);
}

// Función para mostrar la lista de estudiantes
void mostrarEstudiantes(Estudiante arr[], int n) {
    for (int i = 0; i < n; i++) {
        printf("Código: %d, Nota: %.2f\n", arr[i].codigo, arr[i].nota);
    }
}

int main() {
    int opcion;
    do {
        printf("\n--- Menú ---\n");
        printf("1. Buscar la Nota Máxima del Curso\n");
        printf("2. Calcular el Promedio del Curso\n");
        printf("3. Ordenar Códigos de Estudiantes (Selection Sort Recursivo)\n");
        printf("4. Salir\n");
        printf("Elige una opción: ");
        scanf("%d", &opcion);

        switch (opcion) {
            case 1:
                printf("\nLa nota máxima es: %.2f\n", notaMaxima(estudiantes, total));
                break;
            case 2:
                printf("\nEl promedio del curso es: %.2f\n", sumaNotas(estudiantes, total) / total);
                break;
            case 3:
                selectionSortRec(estudiantes, total, 0);
                printf("\nLista de estudiantes ordenada por código:\n");
                mostrarEstudiantes(estudiantes, total);
                break;
            case 4:
                printf("Saliendo...\n");
                break;
            default:
                printf("Opción no válida\n");
        }
    } while (opcion != 4);

    return 0;
}
